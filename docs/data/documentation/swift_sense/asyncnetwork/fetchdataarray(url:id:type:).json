{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetchDataArray"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Decodable","preciseIdentifier":"s:Se"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"url","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"URL"}]}]},{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Type of Model conforming to Decodable. Helps swift generic inference"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"async throws -> T"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This API handles making a network request, parsing of network response into JSON data as long as the model "},{"type":"text","text":" conforms to Protocol "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":"."}]},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Async Await APIs could be limited to specific iOS versions."}]}],"type":"aside","name":"Warning"},{"type":"codeListing","syntax":null,"code":["@Published var meals: [Meal] = []","","func fetchRecipes() async {","    do {","        let recipes = try await AsyncNetwork.shared.fetchDataArray(url: Constants.mealAPIURL, type: MealModel.self)","        meals = recipes","    } catch {","        print(error)","    }","}","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swift_sense\/asyncnetwork\/fetchdataarray(url:id:type:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/swift-sense\/documentation\/swift_sense\/AsyncNetwork\/fetchDataArray(url:id:type:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Makes a network request using Combine framework with type T: Codable and returns "},{"type":"codeVoice","code":"Future<Result<[T:Decodable], Error>>"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"fetchDataArray(url:id:type:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetchDataArray"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"symbolKind":"method","externalID":"s:11swift_sense12AsyncNetworkC14fetchDataArray3url2id4typeSayxGSS_SiSgxmtYaKSeRzlF","modules":[{"name":"swift-sense"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"13.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"10.15","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/swift-sense\/documentation\/swift_sense","doc:\/\/swift-sense\/documentation\/swift_sense\/AsyncNetwork"]]},"references":{"doc://swift-sense/documentation/swift_sense":{"role":"collection","title":"swift-sense","abstract":[],"identifier":"doc:\/\/swift-sense\/documentation\/swift_sense","kind":"symbol","type":"topic","url":"\/documentation\/swift_sense"},"doc://swift-sense/documentation/swift_sense/AsyncNetwork":{"role":"symbol","title":"AsyncNetwork","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncNetwork"}],"abstract":[],"identifier":"doc:\/\/swift-sense\/documentation\/swift_sense\/AsyncNetwork","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncNetwork"}],"url":"\/documentation\/swift_sense\/asyncnetwork"},"doc://swift-sense/documentation/swift_sense/AsyncNetwork/fetchDataArray(url:id:type:)":{"role":"symbol","title":"fetchDataArray(url:id:type:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fetchDataArray"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Makes a network request using Combine framework with type T: Codable and returns "},{"type":"codeVoice","code":"Future<Result<[T:Decodable], Error>>"},{"type":"text","text":"."}],"identifier":"doc:\/\/swift-sense\/documentation\/swift_sense\/AsyncNetwork\/fetchDataArray(url:id:type:)","kind":"symbol","type":"topic","url":"\/documentation\/swift_sense\/asyncnetwork\/fetchdataarray(url:id:type:)"}}}